<?php
// src/Top10/CabinetBundle/Entity/Repository/CommentsRepository.php

namespace Top10\CabinetBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentsRepository extends EntityRepository
{


//for Posts
    public function getComments( $arrWhere = null, $approved = true )
    {
        $qb = $this->createQueryBuilder('c')
					->select('c')
					->leftJoin( 'c.likes', 'l', 'WITH', 'l.ip = :ip' )
						->setParameter( 'ip', $_SERVER['REMOTE_ADDR'] )
					->andWhere( 'c.parent IS NULL' )
					->addOrderBy( 'c.created', 'DESC' );


		if( isset( $arrWhere['homes'] ) )
			$qb->andWhere( 'c.homes = :homes' )
				->setParameter( 'homes', $arrWhere['homes'] );

		if( isset( $arrWhere['rooms'] ) )
			$qb->andWhere( 'c.rooms = :rooms' )
				->setParameter( 'rooms', $arrWhere['rooms'] );

		if( isset( $arrWhere['posts'] ) )
			$qb->andWhere( 'c.posts = :posts' )
				->setParameter( 'posts', $arrWhere['posts'] );

		if (false === is_null($approved))
            $qb->andWhere('c.approved = :approved')
               ->setParameter('approved', $approved);

        return $qb->getQuery()
                  ->getResult();
    }



	public function getCountComments( $arrWhere = null, $approved = true )
    {
        $qb = $this->createQueryBuilder('c')
                   ->select('count(c.id)');

		if( isset( $arrWhere['homes'] ) )
			$qb->andWhere( 'c.homes = :homes_id' )
				->setParameter( 'homes_id', $arrWhere['homes'] );

		if( isset( $arrWhere['rooms'] ) )
			$qb->andWhere( 'c.rooms = :rooms_id' )
				->setParameter( 'rooms_id', $arrWhere['rooms'] );

		if( isset( $arrWhere['posts'] ) ){
			$qb->andWhere( 'c.posts = :posts_id' )
				->setParameter( 'posts_id', $arrWhere['posts'] );
		}

		if (false === is_null($approved))
            $qb->andWhere('c.approved = :approved')
               ->setParameter('approved', $approved);

        return $qb->getQuery()->getSingleScalarResult();
    }


}
